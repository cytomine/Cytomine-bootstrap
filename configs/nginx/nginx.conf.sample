#
# Copyright (c) 2009-2020. Authors: see NOTICE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

worker_processes  1;
daemon off;
error_log  logs/error.log;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    server_names_hash_bucket_size  128;
    server_tokens off;

    log_format  main  '$host - $remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;

    keepalive_timeout  120;
    proxy_connect_timeout 75;

    large_client_header_buffers 4 16k;

    server {
        client_max_body_size 0;
        listen       80;
        server_name  $CORE_URL;


        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_pass http://web_ui;
        }
        location /api {
            proxy_intercept_errors off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_pass http://core:8080;
        }
        location /monitoring { # check and logout
            proxy_intercept_errors off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_pass http://core:8080;
        }
        location ~ /(login|logout) {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_pass http://core:8080;
        }
        location ~ /(server|session|custom-ui|static) {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_pass http://core:8080;
        }
        location ~ /(restApiDoc|js/jsondoc|css/jsondoc) {
               proxy_set_header X-Real-IP $remote_addr;
               proxy_set_header Host $host;
               proxy_pass http://core:8080;
        }

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_intercept_errors on;

        error_page 404 = /cytomine-page-not-found;
        location /cytomine-page-not-found {
                default_type "text/html";
                alias /opt/nginx/nginx-1.10.1/html/404.html;
        }
    }
    server {
        client_max_body_size 0;
        listen       80;
        server_name  $IMS_URL1;

        location / {
            add_header Access-Control-Allow-Origin *;
            proxy_set_header Host $host;
            proxy_pass http://pims:5000;
        }
    }
    server {
        client_max_body_size 0;
        listen       80;
        server_name  $IMS_URL2;

        location / {
            add_header Access-Control-Allow-Origin *;
            proxy_set_header Host $host;
            proxy_pass http://pims:5000;
        }
    }
    server {
        client_max_body_size 0;
        listen       80;
        server_name  $UPLOAD_URL;

        # Upload form should be submitted to this location
        location /upload {
            proxy_read_timeout 600;
            # Pass altered request body to this location
            upload_pass   @test;
            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            upload_store /tmp/uploaded;

            # Allow uploaded files to be read only by user
            upload_store_access user:rw group:rw all:rw;

            # Set specified fields in request body
            upload_set_form_field $upload_field_name.name "$upload_file_name";
            upload_set_form_field $upload_field_name.content_type "$upload_content_type";
            upload_set_form_field $upload_field_name.path "$upload_tmp_path";

            # Inform backend about hash and size of a file
            upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
            upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";
            upload_pass_form_field "^submit$|^description$";

            upload_pass_args on;

            add_header 'Access-Control-Allow-Credentials' 'false';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Content-Range, Content-Disposition, Content-Description, date, dateFull, authorization,content-type-full';
            add_header 'Access-Control-Max-Age' '1728000';
            add_header 'Access-Control-Allow-Origin' '*';
        }
        # Pass altered request body to a backend
        location @test {
            add_header 'Access-Control-Allow-Origin' '*';
            proxy_pass   http://pims:5000;
            proxy_read_timeout 600;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
